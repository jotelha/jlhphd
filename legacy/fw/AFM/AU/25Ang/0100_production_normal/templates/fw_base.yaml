{#
# sample identifier: AFM/SDS/646/AU/111/52x30x2/hemicylinders/50Ang/stepped/30Ang/1500000
# identifier composition:
#                        ^surfactant            ^initial config
#                            ^surfactant molcules             ^indenter name (not real measures)
#                                ^substrate material                ^indenter structure
#                                   ^substrate crytal plane                 ^initial indenter substrate distance
#                                       ^substrate unit cell multiples            ^steps to contact
#
# regular expression to turn metadata into placholder lines:
#   pattern:      ^([[:space:]]+)([^:[:space:]]+):([[:space:]]+)[^[:space:]]+.*$
#   replacement:  \1\2:\3{{ \2 }}
# {% set datafile_identifier = "interface/%s/%d/%s/%s/%dx%dx%d/%s/initial_config.lammps"|format(surfactant,sf_nmolecules,substrate,sb_crystal_plane,sb_multiples[0],sb_multiples[1],sb_multiples[2],sf_preassembly) %}
# {% set file_identifier = "interface_%s_%d_%s_%s_%dx%dx%d_%s"|format(surfactant,sf_nmolecules,substrate,sb_crystal_plane,sb_multiples[0],sb_multiples[1],sb_multiples[2],sf_preassembly) %}
#}
{# identifier for results, used as sub-path AND as filepad prefix #}
{%- set identifier = "AFM/%s/%s/%s%s/%s%s/%s/%s/%s%s/%s/%s/%s/%s/%s%s/%s/%s"|format(
  indenter.substrate,
  indenter.crystal_plane,
  indenter.initial_radius,
  indenter.initial_radius_unit,
  indenter.quenching_time_span,
  indenter.quenching_time_span_unit,
  substrate,
  sb_crystal_plane,
  sb_base_length,
  sb_base_length_unit,
  sb_shape,
  surfactant,
  sf_nmolecules,
  sf_preassembly,
  constant_indenter_velocity,
  constant_indenter_velocity_unit,
  step,
  "now"|datetime('%Y%m%d%H%M') ) -%}

{%- set system_name = "%d_%s_%s_on_%s_%s_%s%s_%s_with_%s_%s_r_%s%s_indenter_at_%s_%s_approach_velocity"|format(
  sf_nmolecules,
  surfactant,
  sf_preassembly,
  substrate,
  sb_crystal_plane,
  sb_base_length,
  sb_base_length_unit,
  sb_shape,
  indenter.substrate,
  indenter.crystal_plane,
  indenter.initial_radius,
  indenter.initial_radius_unit,
  constant_indenter_velocity,
  constant_indenter_velocity_unit) -%}
{# descriptive natural language title for display purposes #}
{%- set title = "%s %s r = %s %s indenter at %s %s approach velocity on %s %s %s on %s %s %s %s %s substrate"|format(
  indenter.substrate,
  indenter.crystal_plane,
  indenter.initial_radius,
  indenter.initial_radius_unit,
  constant_indenter_velocity,
  constant_indenter_velocity_unit,
  sf_nmolecules,
  surfactant,
  sf_preassembly,
  substrate,
  sb_crystal_plane,
  sb_base_length,
  sb_base_length_unit,
  sb_shape) -%}

{# random filter draws from sequence, thus construct sequence from time #}
{%- if random_seed is undefined -%}
{%- set random_seed = range(1,900000000)|random -%}
{%- endif -%}

{# depending on machine, different queue settings are necessary #}
{# JUWELS uses SLURM, NEMO MOAB #}
{%- macro render_queueadapter() -%}
{%- if machine is in ['NEMO'] -%}
nodes:            {{ nodes|default(8,true)|int }}
ppn:              {{ ppn|default(20,true)|int }}
queue:            {{ queue|default('',true) }}
walltime:         {{ walltime|default("96:00:00") }}
{%- elif machine is in ['JUWELS'] -%}
account:          {{ account|default("hfr13") }}
cpus_per_task:    {{ cpus_per_task|default(1,true)|int }}
ntasks_per_node:  {{ ntasks_per_node|default(96,true)|int }}
ntasks:           {{ ntasks|default(192,true)|int }}
queue:            {{ queue|default("batch") }}
walltime:         {{ walltime|default("24:00:00") }}
{%- endif -%}
{%- endmacro -%}

{%- if worker is in ['juwels_noqueue'] -%}
{%- set smb_port_provider = "localhost" -%}
{%- set smb_port_local    = "$(cat .port)" -%}
{%- else -%}
{%- set smb_port_provider = smb_host|default("ufr2.isi1.public.ads.uni-freiburg.de",true) -%}
{%- set smb_port_local    = smb_port -%}
{%- endif -%}

{# JUWELS and bwCloud have to transfer results via ssh port forwarding to RZ storage #}
{# for this purpose, a background task can establish the ssh connection #}
{%- macro render_smb_forward() -%}
{%- if worker is in ['bwcloud_std','juwels_noqueue'] -%}
_background_tasks:
- _fw_name: BackgroundTask
  num_launches:  1
  run_on_finish: false
  sleep_time:    10
  tasks:
  - _fw_name: PyTask
    func:     ssh_forward.forward
    kwargs:
      remote_host:  {{ smb_host|default("ufr2.isi1.public.ads.uni-freiburg.de",true) }}
      remote_port:  {{ smb_port|default(445,true)|int }}
      ssh_host:     {{ smb_gateway|default("132.230.102.164",true) }}
      ssh_user:     {{ smb_gateway_user|default("sshclient",true) }}
      ssh_keyfile:  {{ smb_gateway_ssh_id|default("~/.ssh/sshclient-frrzvm",true) }}
      port_file:    .port
{%- endif -%}
{%- endmacro -%}

{# a simple script waiting for the ssh connection port to be allocated #}
{%- macro render_wait_for_port() -%}
{%- if worker is in ['bwcloud_std','juwels_noqueue'] -%}
- _fw_name: ScriptTask
  script: >-
    counter=0;
    while [ ! -f .port ]; do
      sleep 1;
      counter=$((counter + 1));
      if [ $counter -ge 10 ]; then
        echo "Timed out waiting for port!";
        exit 126;
      fi;
    done
  stderr_file:   wait.err
  stdout_file:   wait.out
  store_stdout:  true
  store_stderr:  true
  fizzle_bad_rc: true
  use_shell:     true
{%- endif -%}
{%- endmacro -%}

{%- macro render_metadata() -%}
# technical settings
machine:          {{ machine }}
mode:             {{ mode }}
type:             {{ type }}
step:             {{ step }}

ewald_accuracy:       {{ ewald_accuracy }}
coulomb_cutoff:       {{ coulomb_cutoff }}
coulomb_cutoff_unit:  {{ coulomb_cutoff_unit }}
skin_distance:        {{ skin_distance }}
skin_distance_unit:   {{ skin_distance_unit }}

neigh_delay:     {{ neigh_delay }}
neigh_every:     {{ neigh_every }}
neigh_check:     {{ neigh_check }}

compute_group_properties:                     {{ compute_group_properties }}
mpiio:                                        {{ mpiio }}
netcdf_frequency:                             {{ netcdf_frequency }}
thermo_frequency:                             {{ thermo_frequency }}
thermo_average_frequency:                     {{ thermo_average_frequency }}
production_steps:                             {{ production_steps }}

langevin_damping:                             {{ langevin_damping }}
barostat_damping:                             {{ barostat_damping }}
use_barostat:                                 {{ use_barostat }}
use_dpd_tstat:                                {{ use_dpd_tstat }}
use_eam:                                      {{ use_eam }}
use_ewald:                                    {{ use_ewald }}

# system
system_name:                                  {{ system_name }}

ci_preassembly:                               {{ ci_preassembly }}
constant_indenter_velocity:                   {{ constant_indenter_velocity }}
constant_indenter_velocity_unit:              {{ constant_indenter_velocity_unit }}
counterion:                                   {{ counterion }}
force_field:                                  {{ force_field }}
frozen_sb_layer_thickness:                    {{ frozen_sb_layer_thickness }}
frozen_sb_layer_thickness_unit:               {{ frozen_sb_layer_thickness_unit }}
pbc:                                          {{ pbc }}
pressure:                                     {{ pressure }}
pressure_unit:                                {{ pressure_unit }}
restrained_sb_layer_thickness:                {{ restrained_sb_layer_thickness }}
restrained_sb_layer_thickness_unit:           {{ restrained_sb_layer_thickness_unit }}
sb_name:                                      {{ sb_name }}
sb_area:                                      {{ sb_area }}
sb_area_unit:                                 {{ sb_area_unit }}
sb_base_length:                               {{ sb_base_length }}
sb_base_length_unit:                          {{ sb_base_length_unit }}
sb_crystal_plane:                             {{ sb_crystal_plane }}
sb_crystal_plane_multiples:                   {{ sb_crystal_plane_multiples }}
sb_lattice_constant:                          {{ sb_lattice_constant }}
sb_lattice_constant_unit:                     {{ sb_lattice_constant_unit }}
sb_in_dist:                                   {{ sb_in_dist }}
sb_in_dist_unit:                              {{ sb_in_dist_unit }}
sb_measures:                                  {{ sb_measures }}
sb_measures_unit:                             {{ sb_measures_unit }}
sb_multiples:                                 {{ sb_multiples }}
sb_natoms:                                    {{ sb_natoms }}
sb_normal:                                    {{ sb_normal }}
sb_shape:                                     {{ sb_shape }}
sb_thickness:                                 {{ sb_thickness }}
sb_thickness_unit:                            {{ sb_thickness_unit }}
sb_volume:                                    {{ sb_volume }}
sb_volume_unit:                               {{ sb_volume_unit }}
sf_concentration:                             {{ sf_concentration }}
sf_concentration_unit:                        {{ sf_concentration_unit }}
sf_nmolecules:                                {{ sf_nmolecules }}
sf_preassembly:                               {{ sf_preassembly }}
solvent:                                      {{ solvent }}
substrate:                                    {{ substrate }}
surfactant:                                   {{ surfactant }}
sv_density:                                   {{ sv_density }}
sv_density_unit:                              {{ sv_density_unit }}
sv_preassembly:                               {{ sv_preassembly }}
temperature:                                  {{ temperature }}
temperature_unit:                             {{ temperature_unit }}
time_step:                                    {{ time_step }}
time_step_unit:                               {{ time_step_unit }}

indenter:
  equilibration_time_span:      {{ indenter.equilibration_time_span }}
  equilibration_time_span_unit: {{ indenter.equilibration_time_span_unit }}
  initial_radius:               {{ indenter.initial_radius }}
  initial_radius_unit:          {{ indenter.initial_radius_unit }}
  initial_shape:                {{ indenter.initial_shape }}
  lammps_units:                 {{ indenter.lammps_units }}
  melting_final_temperature:    {{ indenter.melting_final_temperature }}
  melting_time_span:            {{ indenter.melting_time_span }}
  melting_time_span_unit:       {{ indenter.melting_time_span_unit }}
  minimization_ftol:            {{ indenter.minimization_ftol }}
  minimization_ftol_unit:       {{ indenter.minimization_ftol_unit }}
  natoms:                       {{ indenter.natoms }}
  crystal_plane:                {{ indenter.crystal_plane }}
  orientation:                  {{ indenter.orientation }}
  potential:                    {{ indenter.potential }}
  quenching_time_span:          {{ indenter.quenching_time_span }}
  quenching_time_span_unit:     {{ indenter.quenching_time_span_unit }}
  quenching_time_step:          {{ indenter.quenching_time_step }}
  quenching_time_step_unit:     {{ indenter.quenching_time_step_unit }}
  substrate:                    {{ indenter.substrate }}
  temperature:                  {{ indenter.temperature }}
  temperature_unit:             {{ indenter.temperature_unit }}
  time_step:                    {{ indenter.time_step }}
  time_step_unit:               {{ indenter.time_step_unit }}
  type:                         {{ indenter.type }}

workflow_creation_date:                       {{ "now"|datetime }}
{%- endmacro -%}
{%- block body -%}{%- endblock -%}
