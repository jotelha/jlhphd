{% extends "fw_base.yaml" %}
{% block body %}
name: {{ machine|default("NEMO",true) }}, {{ title }}, recover failed LAMMPS NVT equilibration
spec:
  _category: {{ worker|default("nemo_noqueue",true) }}
  _allow_fizzled_parents: True
  _files_in:
    # from successfull lammps run:
    data_file:         default.lammps
    traj_file:         default.nc
    log_file:          log.lammps
    ave_file:          thermo_ave.out
    coeff_file:        coeff.infile
    ndx_file:          groups.ndx
    # from successfull postprocessing of failed lammps run:
    joint_traj_file:   joint.default.nc
    joint_thermo_file: joint.thermo.out
    joint_ave_file:    joint.thermo_ave.out
  _files_out:
    # either forwarded from successfull or recovered from failed lammps run:
    data_file:         default.lammps
    traj_file:         default.nc
    log_file:          log.lammps
    ave_file:          thermo_ave.out
    ndx_file:          groups.ndx
    # from successfull postprocessing of failed lammps run:
    joint_traj_file:   joint.default.nc
    joint_thermo_file: joint.thermo.out
    joint_ave_file:    joint.thermo_ave.out
    # recovered from failed lammps run
    restart_file:      default.mpiio.restart
    input_header:      lmp_header.input
    input_equilibration_nvt:  input_equilibration_nvt.input
    coeff_file:        coeff.input
  _tasks:
  - _fw_name: RecoverLammpsTask
    recover:                      True # filter most recent restart file and forward
    repeated_recover_fw_name:      {{ machine|default("NEMO",true) }}, {{ title }}, recover failed LAMMPS NVT equilibration, repeatedly
    restart_file_glob_patterns:   "*.restart[0-9]"
    # recover input files, trajectory, log and thermo_ave
    other_glob_patterns:
    - "*.input"
    - default.nc
    - log.lammps
    - thermo_ave.out
    default_restart_file:         default.mpiio.restart
    fizzle_on_no_restart_file:    true
    max_restarts:                 {{ max_restarts|default(3,true)|int }} # repeatedly append recover and restart fireworks
    ignore_erros:                 false
    # a firework to be appended as restart if initial LAMMPS run fails
    restart_fw:
      name: {{ machine|default("NEMO",true) }}, {{ title }}, LAMMPS restarted production run
      spec:
        _category: {{ queue_worker|default("juwels_queue",true) }}
        _queueadapter:
          {{ render_queueadapter()|safe|indent(10) }}
        _files_in:
          restart_file:               default.mpiio.restart
          input_header:               lmp_header.input
          input_equilibration_nvt:    lmp_equilibration_nvt.input
          coeff_file:                 coeff.input
          # ndx_file:                   groups.ndx
        _files_out:
          ave_file:  thermo_ave.out
          data_file: default.lammps
          traj_file: default.nc
          log_file:  log.lammps
          ndx_file:  groups.ndx
        _tasks:
        - _fw_name: CmdTask
          cmd: lmp
          opt:
            - -in lmp_equilibration_nvt.input
          - -v coeffInfile              coeff.input
          - -v coeffOutfile             coeff.input.transient
          - -v compute_group_properties {{ compute_group_properties|default(1,false)|int }}
          - -v restrain_substrate_layer {{ restrained_sb_layer_thickness|default(14.0,true)|float }} # freeze 14.0 Angstrom of AU at botton of box
          - -v has_indenter             1
          - -v langevin_damping         {{ langevin_damping|default(100,false) }}
          - -v mpiio                    {{ mpiio|default(1,false)|int }}
          - -v netcdf_frequency         {{ netcdf_frequency|default(1000,true)|int }}
          - -v productionSteps          {{ nvt_equilibration_steps|default(10000,true)|int }}
          - -v initialT                 {{ initialT|default(298.0,false)|float }}
          - -v temperatureT             {{ temperature|default(298.0,false)|float }}
          - -v random_seed              {{ random_seed|default(29061988,true)|int }}
          - -v reinitialize_velocities  {{ reinitialize_velocities|default(1,false)|int}}
          - -v read_groups_from_file    0
          - -v restrained_indenter      1
          - -v restart_frequency        {{ restart_frequency|default(100,true)|int }}
          - -v surfactant_name          {{ surfactant }}
          - -v temper_solid_only        0
          - -v thermo_frequency         {{ thermo_frequency|default(1000,true)|int }}
          - -v thermo_average_frequency {{ thermo_average_frequency|default(1000,true)|int }}
          - -v use_barostat             0
          - -v use_berendsen_bstat      0
          - -v use_dpd_tstat            0
          - -v use_eam                  {{ use_eam|default(1,false)|int }}
          - -v use_ewald                {{ use_ewald|default(1,false)|int }}
          - -v write_coeff              1
          - -v write_coeff_to_datafile  0
          - -v write_groups_to_file     1
          - -v coulomb_cutoff           {{ coulomb_cutoff|default(8.0,true)|float }}
          - -v ewald_accuracy           {{ ewald_accuracy|default('1.0e-4',true) }}
          - -v neigh_delay              {{ neigh_delay|default(2,false)|int }}
          - -v neigh_every              {{ neigh_every|default(1,false)|int }}
          - -v neigh_check              {{ neigh_check|default(1,false) }}
          - -v skin_distance            {{ skin_distance|default(3.0,true)|float }}
          - -v restartFile              default.mpiio.restart
          - -v is_restart               1
          stderr_file:    std.err
          stdout_file:    std.out
          store_stdout:   true
          store_stderr:   true
          use_shell:      true
          fizzle_bad_rc:  true
        _trackers:
        - filename: log.lammps
          nlines: 25
        metadata:
          state: restarted nvt equilibration
          {{ render_metadata()|indent(10)}}

    detour_fw:
      name: "{{ machine|default("NEMO",true) }}, {{ title }}, LAMMPS immediate post-processing"
      spec:
        _category: {{ postp_worker|default("nemo_noqueue",true) }}

        # _allow_fizzled_parents: True
        _files_in:
          # from failed or successfull lammps run, either
          # recovered or forwarded via recovery fw:
          traj_file:       default.nc
          log_file:        log.lammps
          ave_file:        thermo_ave.out
          # from successfull post processung run, forwarded via recovery fw:
          joint_traj_file:       previous.nc # from previous post-processing task
          joint_thermo_file:     previous.thermo.out
          joint_ave_file:        previous.thermo_ave.out
        _files_out:
          joint_traj_file:       default.nc
          joint_thermo_file:     thermo.out
          joint_ave_file:        thermo_ave.out

        _tasks:
        - _fw_name: CmdTask
          cmd: extract_thermo.sh # extracts thermo output from lammps log
          opt:
          - log.lammps # input file
          - thermo.out # output file
          stderr_file:   extract_thermo.err
          stdout_file:   extract_thermo.out
          store_stdout:  true
          store_stderr:  true
          fizzle_bad_rc: false
          use_shell:     true

        - _fw_name: CmdTask # concatenate previous and current thermo output
          cmd: join_thermo.py
          opt:
          - -v # verbose info
          - previous.thermo.out # 1st input file
          - thermo.out  # 2nd input file
          - joint.thermo.out # output file
          stderr_file:   join_thermo.err
          stdout_file:   join_thermo.out
          store_stdout:  true
          store_stderr:  true
          fizzle_bad_rc: false
          use_shell:     true

        - _fw_name: CmdTask # concatenate previous and current thermo ave output
          cmd: join_thermo.py
          opt:
          - -v # verbose info
          - --hashed-header
          - previous.thermo_ave.out # 1st input file
          - thermo_ave.out  # 2nd input file
          - joint.thermo_ave.out # output file
          stderr_file:   join_thermo_ave.err
          stdout_file:   join_thermo_ave.out
          store_stdout:  true
          store_stderr:  true
          fizzle_bad_rc: false
          use_shell:     true

        - _fw_name: CmdTask # concatenate previous and current trajectory
          cmd: ncjoin.py
          opt:
          - -v time
          - -n joint.nc # output file
          - previous.nc # 1st input file
          - default.nc  # 2nd input file
          stderr_file:   ncjoin.err
          stdout_file:   ncjoin.out
          store_stdout:  true
          store_stderr:  true
          fizzle_bad_rc: false
          use_shell:     true

        # if no previous files provided via _files_in, just forward current files
        # by letting the following file copy task fail deliberately
        - _fw_name: FileTransferTask
          mode: copy
          ignore_errors: true
          files:
          - src:  joint.thermo.out
            dest: thermo.out
          - src:  joint.thermo_ave.out
            dest: thermo_ave.out
          - src:  joint.nc
            dest: default.nc
        metadata:
          state: immediate postrpocessing
          {{ render_metadata()|indent(10)}}

  metadata:
    state: recover failed nvt equilibration
    {{ render_metadata()|indent(4)}}
{% endblock %}
