{#
# sample identifier: AFM/SDS/646/AU/111/52x30x2/hemicylinders/50Ang/stepped/30Ang/1500000
# identifier composition:
#                        ^surfactant            ^initial config
#                            ^surfactant molcules             ^indenter name (not real measures)
#                                ^substrate material                ^indenter structure
#                                   ^substrate crytal plane                 ^initial indenter substrate distance
#                                       ^substrate unit cell multiples            ^steps to contact
#
# regular expression to turn metadata into placholder lines:
#   pattern:      ^([[:space:]]+)([^:[:space:]]+):([[:space:]]+)[^[:space:]]+.*$
#   replacement:  \1\2:\3{{ \2 }}
# {% set datafile_identifier = "interface/%s/%d/%s/%s/%dx%dx%d/%s/initial_config.lammps"|format(surfactant,sf_nmolecules,substrate,sb_crystal_plane,sb_multiples[0],sb_multiples[1],sb_multiples[2],sf_preassembly) %}
# {% set file_identifier = "interface_%s_%d_%s_%s_%dx%dx%d_%s"|format(surfactant,sf_nmolecules,substrate,sb_crystal_plane,sb_multiples[0],sb_multiples[1],sb_multiples[2],sf_preassembly) %}
#}
{%- set workflow_creation_date = "now"|datetime -%}
{# identifier for results, used as sub-path AND as filepad prefix #}
{%- set identifier = (
  type|string + '/' +
  'probe/' +
    indenter.substrate|string + '/' +
    indenter.crystal_plane|string + '/' +
    indenter.initial_radius|string +
    indenter.initial_radius_unit|string + '/' +
    indenter.quenching_time_span|string +
    indenter.quenching_time_span_unit|string + '/' +
  'substrate/' +
    substrate|string + '/' +
    sb_crystal_plane|string + '/' +
    sb_base_length|string +
    sb_base_length_unit|string + '/' +
    sb_shape|string + '/' +
  'surfactant/' +
    surfactant|string + '/' +
    sf_nmolecules|string + '/' +
    sf_preassembly|string + '/' +
  'approach/' +
    approach.sb_in_dist|string +
    sb_in_dist_unit|string + '/' +
    approach.constant_indenter_velocity|string +
    constant_indenter_velocity_unit|string + '/' +
  'shear/' +
    sb_in_dist|string +
    sb_in_dist_unit|string + '/' +
    constant_indenter_velocity|string +
    constant_indenter_velocity_unit|string + '/' +
    direction_of_linear_movement|string + '/' +
  step|string + '/' +
  workflow_creation_date ) -%}

{# descriptive natural language title for display purposes #}
{%- set title = identifier -%}

{# random filter draws from sequence, thus construct sequence from time #}
{%- if random_seed is undefined -%}
{%- set random_seed = range(1,900000000)|random -%}
{%- endif -%}

{# depending on machine, different queue settings are necessary #}
{# JUWELS uses SLURM, NEMO MOAB #}
{%- macro render_queueadapter() -%}
{%- if machine is in ['NEMO'] -%}
nodes:            {{ nodes|default(8,true)|int }}
ppn:              {{ ppn|default(20,true)|int }}
queue:            {{ queue|default('',true) }}
walltime:         {{ walltime|default("96:00:00") }}
{%- elif machine is in ['JUWELS'] -%}
account:          {{ account|default("hfr13") }}
cpus_per_task:    {{ cpus_per_task|default(1,true)|int }}
ntasks_per_node:  {{ ntasks_per_node|default(96,true)|int }}
ntasks:           {{ ntasks|default(192,true)|int }}
queue:            {{ queue|default("batch") }}
walltime:         {{ walltime|default("24:00:00") }}
{%- endif -%}
{%- endmacro -%}

{%- if worker is in ['juwels_noqueue'] -%}
{%- set smb_port_provider = "localhost" -%}
{%- set smb_port_local    = "$(cat .port)" -%}
{%- else -%}
{%- set smb_port_provider = smb_host|default("ufr2.isi1.public.ads.uni-freiburg.de",true) -%}
{%- set smb_port_local    = smb_port -%}
{%- endif -%}

{# JUWELS and bwCloud have to transfer results via ssh port forwarding to RZ storage #}
{# for this purpose, a background task can establish the ssh connection #}
{%- macro render_smb_forward() -%}
{%- if worker is in ['bwcloud_std','juwels_noqueue'] -%}
_background_tasks:
- _fw_name: BackgroundTask
  num_launches:  1
  run_on_finish: false
  sleep_time:    10
  tasks:
  - _fw_name: PyTask
    func:     ssh_forward.forward
    kwargs:
      remote_host:  {{ smb_host|default("ufr2.isi1.public.ads.uni-freiburg.de",true) }}
      remote_port:  {{ smb_port|default(445,true)|int }}
      ssh_host:     {{ smb_gateway|default("132.230.102.164",true) }}
      ssh_user:     {{ smb_gateway_user|default("sshclient",true) }}
      ssh_keyfile:  {{ smb_gateway_ssh_id|default("~/.ssh/sshclient-frrzvm",true) }}
      port_file:    .port
{%- endif -%}
{%- endmacro -%}

{# a simple script waiting for the ssh connection port to be allocated #}
{%- macro render_wait_for_port() -%}
{%- if worker is in ['bwcloud_std','juwels_noqueue'] -%}
- _fw_name: ScriptTask
  script: >-
    counter=0;
    while [ ! -f .port ]; do
      sleep 1;
      counter=$((counter + 1));
      if [ $counter -ge 10 ]; then
        echo "Timed out waiting for port!";
        exit 126;
      fi;
    done
  stderr_file:   wait.err
  stdout_file:   wait.out
  store_stdout:  true
  store_stderr:  true
  fizzle_bad_rc: true
  use_shell:     true
{%- endif -%}
{%- endmacro -%}

{%- macro render_metadata() -%}
{%- for key, value in context().items() -%}
{%- if not callable(value) -%}
{{ {key: value}|to_nice_yaml }}
{%- endif -%}
{%- endfor -%}
{%- endmacro -%}
{%- block body -%}{%- endblock -%}