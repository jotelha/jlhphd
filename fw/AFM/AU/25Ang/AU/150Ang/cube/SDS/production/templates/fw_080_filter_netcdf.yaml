{% extends "fw_base.yaml" %}
{% block body %}
name: {{ machine|default("NEMO",true) }}, {{ title }}, filter trajectory
spec:
  _category: {{ worker|default("nemo_noqueue",true) }}
  _queueadapter:
    {{ render_queueadapter()|safe|indent(4) }}
  _files_in:
    joint_traj_file:      default.nc
    ndx_file:             groups.ndx
  _files_out:
    filtered_traj_file:   filtered.nc
  _tasks:
  {%- if machine is in ['JUWELS'] -%}
  # on JUWELS, use NCO (netCDF operators) on login node
  - _fw_name: GetFilesTask
    identifiers:
    - selectByAtomType.nco

  # first, remove irrelevant variables for following postprocessing step
  - _fw_name: CmdTask
    cmd: ncks
    opt:
    - -D5 -O -x -v c_peratom_stress,f_peratom_stress_ave,mass,mol,velocities
    - default.nc 01_ncks.nc
    stderr_file:   01_ncks.err
    stdout_file:   01_ncks.out
    store_stdout:  true
    store_stderr:  true
    fizzle_bad_rc: true
    use_shell:     true

  # next, perumte dimensions for easy sorting
  - _fw_name: CmdTask
    cmd: ncpdq
    opt:
    - -D5 -O -a atom,frame,spatial
    - 01_ncks.nc 02_ncpdq.nc
    stderr_file:   02_ncpdq.err
    stdout_file:   02_ncpdq.out
    store_stdout:  true
    store_stderr:  true
    fizzle_bad_rc: true
    use_shell:     true

  # then, "hyperslab" by type and position to only select indenter
  - _fw_name: CmdTask
    cmd: ncap2
    opt:
    - -D5 -O -v -S selectByAtomType.nco
    - 02_ncpdq.nc 03_ncap2.nc
    stderr_file:   03_ncap2.err
    stdout_file:   03_ncap2.out
    store_stdout:  true
    store_stderr:  true
    fizzle_bad_rc: true
    use_shell:     true

  # drop old atom dimension
  - _fw_name: CmdTask
    cmd: ncks
    opt:
    - -D5 -O -x -v atom
    - 03_ncap2.nc
    - 04_ncks.nc
    stderr_file:   04_ncks.err
    stdout_file:   04_ncks.out
    store_stdout:  true
    store_stderr:  true
    fizzle_bad_rc: true
    use_shell:     true

  # rename new dimension
  - _fw_name: CmdTask
    cmd: ncrename
    opt:
    - -D5 -O -d atom_out,atom
    - 04_ncks.nc
    - 05_ncrename.nc
    stderr_file:   05_ncrename.err
    stdout_file:   05_ncrename.out
    store_stdout:  true
    store_stderr:  true
    fizzle_bad_rc: true
    use_shell:     true

  # undo dimension permutation
  - _fw_name: CmdTask
    cmd: ncpdq
    opt:
    - -D5 -O -a frame,atom,spatial
    - 05_ncrename.nc
    - filtered.nc
    stderr_file:   06_ncpdq.err
    stdout_file:   06_ncpdq.out
    store_stdout:  true
    store_stderr:  true
    fizzle_bad_rc: true
    use_shell:     true
  {%- else %}
  # otherwise (i.e. on NEMO), use custom ncfilter.py for quick parallel
  # processing on a node
  - _fw_name: CmdTask
    cmd: ncfilter.py
    opt:
    - --debug
    - default.nc
    - filtered.nc
    - groups.ndx
    - indenter
    stderr_file:   std.err
    stdout_file:   std.out
    store_stdout:  true
    store_stderr:  true
    fizzle_bad_rc: true
    use_shell:     true
  {%- endif %}
  metadata:
    state: filter trajectory
    {{ render_metadata()|indent(4)}}
{% endblock %}
