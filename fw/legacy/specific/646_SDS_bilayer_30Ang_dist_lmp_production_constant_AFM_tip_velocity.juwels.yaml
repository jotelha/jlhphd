name: "JUWELS LAMMPS production: 646 SDS bilayer, indenter stepped, 30 Ang initial distance"
fws:
- fw_id: -1
  name: "JUWELS File Retrieval"
  spec:
    _category: "juwels_noqueue"
    _files_out:
      data_file:       datafile.lammps
      input_file_1:    lmp_header.input
      input_file_2:    lmp_production.input
      input_file_3:    lmp_production_mixed.input
    _tasks:
    - _fw_name: GetFilesTask
      identifiers:
      - lmp_header.input
      - lmp_production.input
      - lmp_production_mixed.input
      - 646_SDS_on_AU_111_51x30x2_bilayer_with_counterion_50Ang_stepped_30Ang_dist_nptEquilibrated.lammps
      new_file_names:
      - lmp_header.input
      - lmp_production.input
      - lmp_production_mixed.input
      - datafile.lammps

- fw_id: -2
  name: "JUWELS production, offline"
  spec:
    _category: "juwels_queue"
    _queueadapter:
      nodes:           4
      ntasks:          384
      ntasks_per_node: 96
      queue:           batch
      walltime:        24:00:00
      account:         hfr13
    _files_in:
      input_file_1:    lmp_header.input
      input_file_2:    lmp_production.input
      input_file_3:    lmp_production_mixed.input
      data_file:       datafile.lammps
    _files_out:
      data_file:       default.lammps
      traj_file:       default.nc
      log_file:        log.lammps
      ave_file:        thermo_ave.out
    _tasks:
    - _fw_name: CmdTask
      cmd: lmp
      opt:
      - -in lmp_production.input
      - -v surfactant_name SDS
      - -v has_indenter 1
      - -v constant_indenter_velocity -0.000001
      - -v productionSteps 37500000
      - -v pbc2d 0
      - -v reinitialize_velocities 0
      - -v use_colvars 0
      - -v mpiio 1
      - -v thermo_frequency 1000
      - -v thermo_average_frequency 1000
      - -v netcdf_frequency  10000
      - -v restart_frequency 10000
      - -v compute_interactions 0
      - -v store_forces 1
      - -v indenter_nve_noforce 1
      stderr_file:   std.err
      stdout_file:   std.out
      fizzle_bad_rc: true
      use_shell:     true
    _trackers:
    - filename: log.lammps
      nlines: 25

# Recover most recent restart file:
- fw_id: -3
  name: "JUWELS recover failed LAMMPS run"
  spec:
    _category: "juwels_noqueue"
    _allow_fizzled_parents: True
    _files_in:
      # from successfull lammps run:
      data_file:         default.lammps
      traj_file:         default.nc
      log_file:          log.lammps
      ave_file:          thermo_ave.out
      # from successfull postprocessing of failed lammps run:
      joint_traj_file:   joint.default.nc
      joint_thermo_file: joint.thermo.out
      joint_ave_file:    joint.thermo_ave.out
    _files_out:
      # either forwarded from successfull or recovered from failed lammps run:
      data_file:         default.lammps
      traj_file:         default.nc
      log_file:          log.lammps
      ave_file:          thermo_ave.out
      # from successfull postprocessing of failed lammps run:
      joint_traj_file:   joint.default.nc
      joint_thermo_file: joint.thermo.out
      joint_ave_file:    joint.thermo_ave.out
      # recovered from failed lammps run
      restart_file:      default.mpiio.restart
      input_file_1:      lmp_header.input
      input_file_2:      lmp_production.input
      input_file_3:      lmp_production_mixed.input
    _tasks:
    - _fw_name: RecoverLammpsTask
      recover:      True # filter most recent restart file and forward
      repeated_recover_fw_name: JUWELS recover failed LAMMPS run, repeatedly
      restart_file_glob_patterns: "*.restart[0-9]"
      # recover input files, trajectory, log and thermo_ave
      other_glob_patterns:
      - "*.input"
      - default.nc
      - log.lammps
      - thermo_ave.out
      default_restart_file: default.mpiio.restart
      fizzle_on_no_restart_file: true
      max_restarts: 5 # repeatedly append recover and restart fireworks
      ignore_erros: false
      # a firework to be appended as restart if initial LAMMPS run fails
      restart_fw:
        name: "JUWELS LAMMPS restart run, offline"
        spec:
          _category: "juwels_queue"
          _queueadapter:
            nodes:           2
            ntasks:          192
            ntasks_per_node: 96
            queue:           batch
            walltime:        06:00:00
            account:         hfr13
          _files_in:
            # from previous recover fw
            restart_file:    default.mpiio.restart
            input_file_1:    lmp_header.input
            input_file_2:    lmp_production.input
            input_file_3:    lmp_production_mixed.input
          _files_out:
            data_file:       default.lammps
            traj_file:       default.nc
            log_file:        lammps.log
            ave_file:        thermo_ave.out
          _tasks:
          - _fw_name: CmdTask
            cmd: lmp
            opt:
            - -in lmp_production.input
            - -v surfactant_name SDS
            - -v has_indenter 1
            - -v constant_indenter_velocity -0.000001
            - -v productionSteps 37500000
            - -v pbc2d 0
            - -v reinitialize_velocities 0
            - -v use_colvars 0
            - -v mpiio 1
            - -v thermo_frequency 1000
            - -v thermo_average_frequency 1000
            - -v netcdf_frequency 10000
            - -v restart_frequency 10000
            - -v compute_interactions 0
            - -v store_forces 1
            - -v indenter_nve_noforce 1
            - -v is_restart 1
            - -v restartFile default.mpiio.restart
            stderr_file:   std.err
            stdout_file:   std.out
            fizzle_bad_rc: true
            use_shell:     true
          _trackers:
          - filename: log.lammps
            nlines: 25
      detour_fw:
        name: "JUWELS LAMMPS immediate post-processing"
        spec:
          _category: "juwels_noqueue"
          # _allow_fizzled_parents: True
          _files_in:
            # from failed or successfull lammps run, either
            # recovered or forwarded via recovery fw:
            traj_file:       default.nc
            log_file:        log.lammps
            ave_file:        thermo_ave.out
            # from successfull post processung run, forwarded via recovery fw:
            joint_traj_file:       previous.nc # from previous post-processing task
            joint_thermo_file:     previous.thermo.out
            joint_ave_file:        previous.thermo_ave.out
          _files_out:
            joint_traj_file:       default.nc
            joint_thermo_file:     thermo.out
            joint_ave_file:        thermo_ave.out

          _tasks:
          - _fw_name: CmdTask
            cmd: extract_thermo.sh # extracts thermo output from lammps log
            opt:
            - log.lammps # input file
            - thermo.out # output file
            stderr_file:   extract_thermo.err
            stdout_file:   extract_thermo.out
            fizzle_bad_rc: false
            use_shell:     true

          - _fw_name: CmdTask # concatenate previous and current thermo output
            cmd: join_thermo.py
            opt:
            - -v # verbose info
            - previous.thermo.out # 1st input file
            - thermo.out  # 2nd input file
            - joint.thermo.out # output file
            stderr_file:   join_thermo.err
            stdout_file:   join_thermo.out
            fizzle_bad_rc: false
            use_shell:     true

          - _fw_name: CmdTask # concatenate previous and current thermo ave output
            cmd: join_thermo.py
            opt:
            - -v # verbose info
            - --hashed-header
            - previous.thermo_ave.out # 1st input file
            - thermo_ave.out  # 2nd input file
            - joint.thermo_ave.out # output file
            stderr_file:   join_thermo_ave.err
            stdout_file:   join_thermo_ave.out
            fizzle_bad_rc: false
            use_shell:     true

          - _fw_name: CmdTask # concatenate previous and current trajectory
            cmd: ncjoin.py
            opt:
            - -v time
            - -n joint.nc # output file
            - previous.nc # 1st input file
            - default.nc  # 2nd input file
            stderr_file:   ncjoin.err
            stdout_file:   ncjoin.out
            fizzle_bad_rc: false
            use_shell:     true

          # if no previous files provided via _files_in, just forward current files
          # by letting the following file copy task fail deliberately
          - _fw_name: FileTransferTask
            mode: copy
            ignore_errors: true
            files:
            - src:  joint.thermo.out
              dest: thermo.out
            - src:  joint.thermo_ave.out
              dest: thermo_ave.out
            - src:  joint.nc
              dest: default.nc
- fw_id: -4
  name: "JUWELS extract forces from NetCDF"
  spec:
    _category: "juwels_noqueue"
    _allow_fizzled_parents: True
    _files_in:
      joint_traj_file:       default.nc # from previous post-processing task
      joint_thermo_file:     thermo.out
      joint_ave_file:        thermo_ave.out

    _files_out:
      indenter_forces:       indenter_z_forces.txt
      nonindenter_forces:    nonindenter_z_forces.txt

    _tasks:
    - _fw_name: CmdTask
      cmd: extract_indenter_nonindenter_forces_from_netcdf.py
      opt:
      - --element Au
      - --dim 2
      - --plane 20.0
      - --netcdf-output-interval 10000
      - --output-formats txt
      - --verbose
      - default.nc # input file
      - indenter_z_forces # output file name without extension
      - nonindenter_z_forces
      stderr_file:   std.err
      stdout_file:   std.out
      fizzle_bad_rc: true
      use_shell:     true

links:
  -1:
  - -2
  -2:
  - -3
  -3:
  - -4

metadata:
  - system_name:      646_SDS_on_AU_111_51x30x2_hemicylinders_with_counterion_50Ang_stepped
    surfactant:       SDS
    sf_nmolecules:    646
    sf_preassembly:   hemicylinders
    counterion:       NA
    ci_preassembly:   at polar heads
    substrate:        AU
    sb_name:          AU_111_51x30x2
    sb_crystal_plane: 111
    sb_multiples:
    - 51
    - 30
    - 2
    solvent:          H2O
    sv_density:       997 # kg m^-3
    sv_preassembly:   random
    indenter:         AU
    indenter_pdb:     50Ang_stepped
    indenter_vel:     0.1 m / s # m / s, constant speed, linear translation
    indenter_dist:    7.5 nm # nm, initial distance above substrate
    temperature:      298 K # K
    pressure:         1 atm # atm
    total_steps:      37500000 # a 2 fs each
    total_time:       75 ns # ns
    type:             production run
