  name: "NEMO recover failed LAMMPS run"
  spec:
    _category: "nemo_noqueue"
    _allow_fizzled_parents: True
    _files_in:
      # from successfull lammps run:
      data_file:         default.lammps
      traj_file:         default.nc
      log_file:          log.lammps
      ave_file:          thermo_ave.out
      # from successfull postprocessing of failed lammps run:
      joint_traj_file:   joint.default.nc
      joint_thermo_file: joint.thermo.out
      joint_ave_file:    joint.thermo_ave.out
    _files_out:
      # either forwarded from successfull or recovered from failed lammps run:
      data_file:         default.lammps
      traj_file:         default.nc
      log_file:          log.lammps
      ave_file:          thermo_ave.out
      # from successfull postprocessing of failed lammps run:
      joint_traj_file:   joint.default.nc
      joint_thermo_file: joint.thermo.out
      joint_ave_file:    joint.thermo_ave.out
      # recovered from failed lammps run
      restart_file:      default.mpiio.restart
      input_file_1:      lmp_header.input
      input_file_2:      lmp_production.input
      input_file_3:      lmp_production_mixed.input
    _tasks:
    - _fw_name: RecoverLammpsTask
      recover:      True # filter most recent restart file and forward
      repeated_recover_fw_name: NEMO recover failed LAMMPS run, repeatedly
      restart_file_glob_patterns: "*.restart[0-9]"
      # recover input files, trajectory, log and thermo_ave
      other_glob_patterns:
      - "*.input"
      - default.nc
      - log.lammps
      - thermo_ave.out
      default_restart_file: default.mpiio.restart
      fizzle_on_no_restart_file: true
      max_restarts: 30 # repeatedly append recover and restart fireworks
      ignore_erros: false
      # a firework to be appended as restart if initial LAMMPS run fails
      restart_fw:
        name: "NEMO LAMMPS restart run, offline"
        spec:
          _category: "nemo_queue_offline"
          _queueadapter:
            nodes: 8
            ppn:   20
            queue:
            walltime: 96:00:00
          _files_in:
            # from previous recover fw
            restart_file:    default.mpiio.restart
            input_file_1:    lmp_header.input
            input_file_2:    lmp_production.input
            input_file_3:    lmp_production_mixed.input
          _files_out:
            data_file:       default.lammps
            traj_file:       default.nc
            log_file:        lammps.log
            ave_file:        thermo_ave.out
          _tasks:
          - _fw_name: CmdTask
            cmd: lmp
            opt:
            - -in lmp_production.input
            - -v surfactant_name SDS
            - -v has_indenter 1
            - -v constant_indenter_velocity -0.000001
            - -v productionSteps 37500000
            - -v pbc2d 0
            - -v reinitialize_velocities 0
            - -v use_colvars 0
            - -v mpiio 1
            - -v thermo_frequency 10000
            - -v thermo_average_frequency 10000
            - -v netcdf_frequency 10000
            - -v restart_frequency 10000
            - -v compute_interactions 0
            - -v store_forces 1
            - -v indenter_nve_noforce 1
            - -v is_restart 1
            - -v restartFile default.mpiio.restart
            stderr_file:   std.err
            stdout_file:   std.out
            fizzle_bad_rc: true
            use_shell:     true
          _trackers:
          - filename: log.lammps
            nlines: 25
      detour_fw:
        name: "NEMO LAMMPS immediate post-processing"
        spec:
          _category: "nemo_noqueue"
          # _allow_fizzled_parents: True
          _files_in:
            # from failed or successfull lammps run, either
            # recovered or forwarded via recovery fw:
            traj_file:       default.nc
            log_file:        log.lammps
            ave_file:        thermo_ave.out
            # from successfull post processung run, forwarded via recovery fw:
            joint_traj_file:       previous.nc # from previous post-processing task
            joint_thermo_file:     previous.thermo.out
            joint_ave_file:        previous.thermo_ave.out
          _files_out:
            joint_traj_file:       default.nc
            joint_thermo_file:     thermo.out
            joint_ave_file:        thermo_ave.out

          _tasks:
          - _fw_name: CmdTask
            cmd: extract_thermo.sh # extracts thermo output from lammps log
            opt:
            - log.lammps # input file
            - thermo.out # output file
            stderr_file:   extract_thermo.err
            stdout_file:   extract_thermo.out
            fizzle_bad_rc: false
            use_shell:     true

          - _fw_name: CmdTask # concatenate previous and current thermo output
            cmd: join_thermo.py
            opt:
            - -v # verbose info
            - previous.thermo.out # 1st input file
            - thermo.out  # 2nd input file
            - joint.thermo.out # output file
            stderr_file:   join_thermo.err
            stdout_file:   join_thermo.out
            fizzle_bad_rc: false
            use_shell:     true

          - _fw_name: CmdTask # concatenate previous and current thermo ave output
            cmd: join_thermo.py
            opt:
            - -v # verbose info
            - --hashed-header
            - previous.thermo_ave.out # 1st input file
            - thermo_ave.out  # 2nd input file
            - joint.thermo_ave.out # output file
            stderr_file:   join_thermo_ave.err
            stdout_file:   join_thermo_ave.out
            fizzle_bad_rc: false
            use_shell:     true

          - _fw_name: CmdTask # concatenate previous and current trajectory
            cmd: ncjoin.py
            opt:
            - -v time
            - -n joint.nc # output file
            - previous.nc # 1st input file
            - default.nc  # 2nd input file
            stderr_file:   ncjoin.err
            stdout_file:   ncjoin.out
            fizzle_bad_rc: false
            use_shell:     true

          # if no previous files provided via _files_in, just forward current files
          # by letting the following file copy task fail deliberately
          - _fw_name: FileTransferTask
            mode: copy
            ignore_errors: true
            files:
            - src:  joint.thermo.out
              dest: thermo.out
            - src:  joint.thermo_ave.out
              dest: thermo_ave.out
            - src:  joint.nc
              dest: default.nc